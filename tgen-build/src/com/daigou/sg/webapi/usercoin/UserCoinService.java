package com.daigou.sg.webapi.usercoin;

/**
 * This file is auto-generated by tgen
 * Don't change manually
 */
import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.Response.Listener;
import com.android.volley.VolleyError;
import com.daigou.sg.rpc.BaseModule;
import com.daigou.sg.rpc.GsonUtils;
import com.daigou.sg.rpc.RpcRequest;
import com.daigou.sg.rpc.RpcResponse;
import com.daigou.sg.rpc.TRpc;
import com.google.gson.Gson;

import java.nio.charset.Charset;

public class UserCoinService {
    private static final Gson gson = GsonUtils.getGsonInstance();
    private static int msgID = 1;

    private UserCoinService() {
        // Constructor hidden because this is a singleton
    }

    private static String getMsgID() {
        msgID += 1;
        return Integer.toString(msgID);
    }

    public static RpcRequest UserGetCoinCount(final Listener<Integer> listener) {
        RpcResponse res = new RpcResponse(Integer.class, listener,false,false);
        java.util.HashMap<String, Object> args = null;

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getWebApiUrl() + "UserCoin/UserGetCoinCount", res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetCoinRecord(final TCoinRecordDomain domain, final int offset, final int limit, final Listener<java.util.ArrayList<TCoinRecord>> listener) {
        RpcResponse res = new RpcResponse(TCoinRecord.class, listener, true,false);
        java.util.HashMap<String, Object> args = new java.util.HashMap<String, Object>();
        
        int domainValue = ((com.daigou.sg.rpc.DeserializerEnum) domain).getValue();
        args.put("domain", domainValue);
        
        args.put("offset", offset);
        
        args.put("limit", limit);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getWebApiUrl() + "UserCoin/UserGetCoinRecord", res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetCoinRecordCount(final TCoinRecordDomain domain, final Listener<Integer> listener) {
        RpcResponse res = new RpcResponse(Integer.class, listener,false,false);
        java.util.HashMap<String, Object> args = new java.util.HashMap<String, Object>();
        
        int domainValue = ((com.daigou.sg.rpc.DeserializerEnum) domain).getValue();
        args.put("domain", domainValue);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getWebApiUrl() + "UserCoin/UserGetCoinRecordCount", res, args);
        TRpc.getQueue().add(req);
        return req;
    }
}
