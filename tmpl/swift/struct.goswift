/**
 * This file is auto-generated by tgen
 * Don't change manually
 */

import Foundation
{{ $ss := . }}
class {{ .AssembleStructName .Struct.Name }}: EzObject {
{{- range .Struct.Fields }}
    {{- if and (eq .Type.Name "list") (eq ($ss.BaseSwift.GetInnerType .Type)  "Int64") }}
    @nonobjc
    var {{ .Name }}:[Int64]? {
        didSet {
            objc_{{ .Name }} = {{ .Name }}?.map { value in NSNumber(longLong: value) }
        }
    }
    
    @objc({{ .Name }})
    var objc_{{ .Name }}:[NSNumber]?
    {{- else }}
    var {{ $ss.FilterPropertory .Name }}: {{ .Type | $ss.BaseSwift.TypecastWithDefaultValue }}
    {{- end}}
{{end}}
    override var allKeys: Set<String> {
        return [{{ range $i, $p := .Struct.Fields }}{{ if ne $i 0 }}, {{ end }}"{{ $p.Name }}"{{ end }}]
    }

    override func fromJSON(jsonObject: AnyObject?) -> Bool {
        guard super.fromJSON(jsonObject) else { return false }

        guard let dict = jsonObject as? [String: AnyObject] else { return false }

        {{- range .Struct.Fields }}
        {{- $t := $ss.BaseSwift.PlainType .Type -}}
        {{- if eq .Type.Name "list" }}
        {{- $innertype := $ss.BaseSwift.GetInnerType .Type -}}
        {{- if $innertype | $ss.BaseSwift.IsBasicType }}
        {{- if eq $innertype "Int64"}}
        {{ $ss.FilterPropertory .Name }} = (dict["{{ .Name }}"] as? [NSNumber])?.map { value in value.longLongValue }
        {{- else }}
        {{ $ss.FilterPropertory .Name }} = dict["{{ .Name }}"] as? [{{ $innertype }}]
        {{- end }}
        {{- else }}
        {{ $ss.FilterPropertory .Name }} = {{ $t }}(jsonObject: dict["{{ .Name }}"])
        {{- end }}
        {{- else }}
        {{- if eq $t "String" }}
        {{ $ss.FilterPropertory .Name }} = dict["{{ .Name }}"] as? {{ $t }}
        {{- else if eq $t "Int" }}
        {{ $ss.FilterPropertory .Name }} = dict["{{ .Name }}"] as? {{ $t }} ?? 0
        {{- else if eq $t "Int64" }}
        {{ $ss.FilterPropertory .Name }} = (dict["{{ .Name }}"] as? NSNumber ?? 0).longLongValue
        {{- else if eq $t "Double" }}
        {{ $ss.FilterPropertory .Name }} = dict["{{ .Name }}"] as? {{ $t }} ?? 0.0
        {{- else if eq $t "Bool" }}
        {{ $ss.FilterPropertory .Name }} = dict["{{ .Name }}"] as? {{ $t }} ?? false
        {{- else }}
        {{ $ss.FilterPropertory .Name }} = {{ $t }}(jsonObject: dict["{{ .Name }}"])
        {{- end }}
        {{- end }}
        {{- end }}

        return true
    }

    override func toJSON() -> AnyObject {
        var dict = [String: AnyObject]()
{{- range .Struct.Fields}}
        dict["{{ .Name }}"] = {{ $ss.BaseSwift.AssignToDict . }}{{ end }}

        return dict
    }
}
