package com.daigou.sg.rpc.shoppingcart;

/**
 * This file is auto-generated by tgen
 * Don't change manually
 */
import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.Response.Listener;
import com.android.volley.VolleyError;
import com.daigou.sg.rpc.BaseModule;
import com.daigou.sg.rpc.GsonUtils;
import com.daigou.sg.rpc.RpcRequest;
import com.daigou.sg.rpc.RpcResponse;
import com.daigou.sg.rpc.TRpc;
import com.google.gson.Gson;

import java.io.IOException;
import java.nio.charset.Charset;
public class ShoppingCartService {
    private static final Gson gson = GsonUtils.getGsonInstance();
    private static int msgID = 1;

    private ShoppingCartService() {
        // Constructor hidden because this is a singleton
    }

    private static String getMsgID() {
        msgID += 1;
        return Integer.toString(msgID);
    }

    public static RpcRequest UserAddNewBasketItem(final TAgentProduct agentProduct, final Listener<Integer> listener) {
        RpcResponse res = new RpcResponse(Integer.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(agentProduct);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserAddNewBasketItem");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserAddProductBackToCart(final int orderId, final Listener<Integer> listener) {
        RpcResponse res = new RpcResponse(Integer.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(orderId);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserAddProductBackToCart");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserAddToCart(final TAgentProduct agentProduct, final Listener<String> listener) {
        RpcResponse res = new RpcResponse(String.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(agentProduct);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserAddToCart");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserAddToPrimeCart(final TAgentProduct agentProduct, final Listener<String> listener) {
        RpcResponse res = new RpcResponse(String.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(agentProduct);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserAddToPrimeCart");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserDeleteBasketItem(final int basketItemId, final Listener<Void> listener) {
        RpcResponse res = new RpcResponse(null, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(basketItemId);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserDeleteBasketItem");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserDeleteCartItem(final java.util.ArrayList<Integer> basketItemIDs, final String type, final Listener<TEditCartItemResult> listener) {
        RpcResponse res = new RpcResponse(TEditCartItemResult.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(basketItemIDs);
        params.add(type);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserDeleteCartItem");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserDeletePrimeBasketItem(final int basketItemId, final Listener<Void> listener) {
        RpcResponse res = new RpcResponse(null, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(basketItemId);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserDeletePrimeBasketItem");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserEditCartItemAttribute(final TEditCartItemAttribute tEditCartItemAttribute, final String type, final Listener<TEditCartItemResult> listener) {
        RpcResponse res = new RpcResponse(TEditCartItemResult.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(tEditCartItemAttribute);
        params.add(type);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserEditCartItemAttribute");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserEditCartItemQuantity(final java.util.ArrayList<TCartItemQuantity> tCartItemQuantityList, final String type, final Listener<TEditCartItemResult> listener) {
        RpcResponse res = new RpcResponse(TEditCartItemResult.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(tCartItemQuantityList);
        params.add(type);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserEditCartItemQuantity");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetCartItemDetail(final int basketItemID, final String type, final Listener<TCartItemDetail> listener) {
        RpcResponse res = new RpcResponse(TCartItemDetail.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(basketItemID);
        params.add(type);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserGetCartItemDetail");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetCartSummary(final String originCode, final Listener<TCartSummary> listener) {
        RpcResponse res = new RpcResponse(TCartSummary.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(originCode);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserGetCartSummary");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetCheckOutSummary(final String originCode, final Listener<TCartSummary> listener) {
        RpcResponse res = new RpcResponse(TCartSummary.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(originCode);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserGetCheckOutSummary");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetPaymentProducts(final String paymentNumbers, final Listener<java.util.ArrayList<TTransactionDetail>> listener) {
        RpcResponse res = new RpcResponse(TTransactionDetail.class, listener, true);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(paymentNumbers);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserGetPaymentProducts");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetPrimeCartSummary(final Listener<TCartSummary> listener) {
        RpcResponse res = new RpcResponse(TCartSummary.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserGetPrimeCartSummary");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserGetPrimeCheckOutSummary(final Listener<TCartSummary> listener) {
        RpcResponse res = new RpcResponse(TCartSummary.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserGetPrimeCheckOutSummary");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserSetBasketItemSelected(final java.util.ArrayList<Integer> basketItemIds, final boolean selected, final String originCode, final Listener<TCartSummary> listener) {
        RpcResponse res = new RpcResponse(TCartSummary.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(basketItemIds);
        params.add(selected);
        params.add(originCode);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserSetBasketItemSelected");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }

    public static RpcRequest UserSetPrimeBasketItemSelected(final java.util.ArrayList<Integer> basketItemIds, final boolean selected, final Listener<TCartSummary> listener) {
        RpcResponse res = new RpcResponse(TCartSummary.class, listener);

        final java.util.ArrayList<Object> params = new java.util.ArrayList<>();
        params.add(basketItemIds);
        params.add(selected);

        java.util.HashMap<String, Object> args = new java.util.HashMap<>();
        args.put("id", getMsgID());
        args.put("method", "ShoppingCart.UserSetPrimeBasketItemSelected");
        args.put("params", params);

        RpcRequest req = new RpcRequest(Request.Method.POST, TRpc.getJsonRpcUrl(), res, args);
        TRpc.getQueue().add(req);
        return req;
    }
}
