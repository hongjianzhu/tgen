package com.daigou.sg.rpc.payment;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;

import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;

/**
 * This file is auto-generated by tgen
 * Don't change manually
 */

public class TPaymentBillSummary implements Serializable {
    public int id;
    public String paymentNumber;
    public String createDate;
    public double total;
    public String type;
    public String paymentType;
    public int shipmentId;

    static TPaymentBillSummary fromJSON(JsonParser jp) throws IOException {
        // Sanity check: verify that we got "Json Object":
        if (jp.nextToken() != JsonToken.START_OBJECT) {
            throw new IOException("Expected data to start with a TPaymentBillSummary Object");
        }

        return doFromJSON(jp);
    }

    private static TPaymentBillSummary doFromJSON(JsonParser jp) throws IOException {
        TPaymentBillSummary result = new TPaymentBillSummary();

        // Iterate over object fields:
        while (jp.nextToken() != JsonToken.END_OBJECT) {
            String fieldName = jp.getCurrentName();

            if (false) {
            } else if (fieldName.equals("id")) {
                jp.nextToken();
                result.id = jp.getIntValue();
            } else if (fieldName.equals("paymentNumber")) {
                jp.nextToken();
                result.paymentNumber = jp.getText();
            } else if (fieldName.equals("createDate")) {
                jp.nextToken();
                result.createDate = jp.getText();
            } else if (fieldName.equals("total")) {
                jp.nextToken();
                result.total = jp.getDoubleValue();
            } else if (fieldName.equals("type")) {
                jp.nextToken();
                result.type = jp.getText();
            } else if (fieldName.equals("paymentType")) {
                jp.nextToken();
                result.paymentType = jp.getText();
            } else if (fieldName.equals("shipmentId")) {
                jp.nextToken();
                result.shipmentId = jp.getIntValue();
            }
        }
        return result;
    }

    static ArrayList<TPaymentBillSummary> fromJSONArray(JsonParser jp) throws IOException {
        if (jp.nextToken() != JsonToken.START_ARRAY) {
            throw new IOException("Expected data to start with a TPaymentBillSummary array");
        }

        ArrayList<TPaymentBillSummary> result = new ArrayList<TPaymentBillSummary>();

        // Iterate over object fields:
        while (jp.nextToken() != JsonToken.END_ARRAY) {
            result.add(doFromJSON(jp));
        }
        return result;
    }
}
