/**
 * This file is auto-generated by tgen
 * Don't change manually
 */

import Foundation

class TREExample: EzObject {
    var amountAvailable: Double = 0.0

    var rebateAmountAvailable: String?

    var amountPendingVerification: Bool = false

    var pendingWithdrawAmount: Int = 0

    var unpaidAmount: Int64 = 0

    var fooes: [TREFoo]?

    var strs: [String]?

    var ints: [Int]?

    var basics: [TRSharedBasic]?

    @nonobjc
    var int64s:[Int64]? {
        didSet {
            objc_int64s = int64s?.map { value in NSNumber(longLong: value) }
        }
    }
    
    @objc(int64s)
    var objc_int64s:[NSNumber]?

    override var allKeys: Set<String> {
        return ["amountAvailable", "rebateAmountAvailable", "amountPendingVerification", "pendingWithdrawAmount", "unpaidAmount", "fooes", "strs", "ints", "basics", "int64s"]
    }

    override func fromJSON(jsonObject: AnyObject?) -> Bool {
        guard super.fromJSON(jsonObject) else { return false }

        guard let dict = jsonObject as? [String: AnyObject] else { return false }
        amountAvailable = dict["amountAvailable"] as? Double ?? 0.0
        rebateAmountAvailable = dict["rebateAmountAvailable"] as? String
        amountPendingVerification = dict["amountPendingVerification"] as? Bool ?? false
        pendingWithdrawAmount = dict["pendingWithdrawAmount"] as? Int ?? 0
        unpaidAmount = (dict["unpaidAmount"] as? NSNumber ?? 0).longLongValue
        fooes = [TREFoo](jsonObject: dict["fooes"])
        strs = dict["strs"] as? [String]
        ints = dict["ints"] as? [Int]
        basics = [TRSharedBasic](jsonObject: dict["basics"])
        int64s = (dict["int64s"] as? [NSNumber])?.map { value in value.longLongValue }

        return true
    }

    override func toJSON() -> AnyObject {
        var dict = [String: AnyObject]()
        dict["amountAvailable"] = amountAvailable
        dict["rebateAmountAvailable"] = rebateAmountAvailable
        dict["amountPendingVerification"] = amountPendingVerification
        dict["pendingWithdrawAmount"] = pendingWithdrawAmount
        dict["unpaidAmount"] = NSNumber(longLong: unpaidAmount)
        dict["fooes"] = fooes?.toJSON()
        dict["strs"] = strs
        dict["ints"] = ints
        dict["basics"] = basics?.toJSON()
        dict["int64s"] = int64s?.map { value in NSNumber(longLong: value) }

        return dict
    }
}
