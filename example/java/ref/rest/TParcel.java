package com.daigou.selfstation.rpc.selfstation;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;

import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;

/**
 * This file is auto-generated by tgen
 * Don't change manually
 */

public class TParcel implements Serializable {
    public String userName;
    public String phone;
    public String parcelNumber;
    public String status;
    public ArrayList<TParcelSection> sections;

    static TParcel fromJSON(JsonParser jp) throws IOException {
        // Sanity check: verify that we got "Json Object":
        if (jp.nextToken() != JsonToken.START_OBJECT) {
            throw new IOException("Expected data to start with a TParcel Object");
        }

        return doFromJSON(jp);
    }

    private static TParcel doFromJSON(JsonParser jp) throws IOException {
        TParcel result = new TParcel();

        // Iterate over object fields:
        while (jp.nextToken() != JsonToken.END_OBJECT) {
            String fieldName = jp.getCurrentName();

            if (false) {
            } else if (fieldName.equals("userName")) {
                jp.nextToken();
                result.userName = jp.getText();
            } else if (fieldName.equals("phone")) {
                jp.nextToken();
                result.phone = jp.getText();
            } else if (fieldName.equals("parcelNumber")) {
                jp.nextToken();
                result.parcelNumber = jp.getText();
            } else if (fieldName.equals("status")) {
                jp.nextToken();
                result.status = jp.getText();
            } else if (fieldName.equals("sections")) {
                result.sections = TParcelSection.fromJSONArray(jp);
            }
        }
        return result;
    }

    static ArrayList<TParcel> fromJSONArray(JsonParser jp) throws IOException {
        if (jp.nextToken() != JsonToken.START_ARRAY) {
            throw new IOException("Expected data to start with a TParcel array");
        }

        ArrayList<TParcel> result = new ArrayList<TParcel>();

        // Iterate over object fields:
        while (jp.nextToken() != JsonToken.END_ARRAY) {
            result.add(doFromJSON(jp));
        }
        return result;
    }
}
